@use "sass:color";
@use "functions.scss";
@use "variables.scss";


@mixin palette ($color, $border-color: variables.$third-color, $font-size: 1rem){
    color: $color;
    border: functions.toRem(variables.$standard-border-px) solid $border-color;
    font-size: $font-size;
}

%text {

    color: variables.$third-color;
    text-align: center;

}


.container {
    border: functions.toRem(variables.$standard-border-px) solid variables.$first-color;
    $margin: functions.toRem(16);

    .exercise-title {
        @extend %text;
        text-decoration: underline;
        text-decoration-color: variables.$second-color;
        text-decoration-thickness: functions.toRem(1) ;
    } 

    h2 {
        
        @include palette(variables.$third-color, variables.$first-color, 1rem);
        @extend %text;
        margin: 0 40%;
        padding: 1rem;

    }

    section {
    margin: $margin;
    display: flex;
    flex-direction: row;
    }

    .shading-row {
        justify-content: space-between;

        @for $var from 1 to 20 {
            :nth-child(#{$var}) {
             background-color: color.adjust(white, $lightness: -5% * $var);
              color: color.adjust(black, $lightness: +5% * $var);
                }
        @if $var == 10 {
            :nth-child(#{$var}) {
            @include palette(variables.$first-color, variables.$first-color, 1rem);
            background-color: variables.$second-color;
            }
        }
    }
    
        div {
    
            @include palette(inherit, variables.$first-color, 1rem);
            width: functions.toRem(45);
            height: functions.toRem(45);
    
            $sizes: 1rem, 2rem, 3rem;
            @each $size in $sizes {
            @if $size == 1rem {
                &.fs-1rem {
                font-size: 1rem;
                }
            }
            @else if $size == 2rem {
                &.fs-2rem {
                font-size: 2rem;
                }
            }
            @else {
                &.fs-3rem {
                font-size: 3rem;
                }
                }
            }
        }
    }

    article {
    
    @extend %text;
    border: functions.toRem(1) solid variables.$third-color;
    padding: functions.toRem(5);
    &.red {
        @include palette(variables.$first-color, variables.$third-color, 1rem);
    }

    &.blue {
        @include palette(variables.$second-color, variables.$third-color, 1rem);
    }
    &.lorem {
        padding: functions.toRem(5);
        width: 100%;
        @include palette(variables.$third-color, variables.$second-color, functions.toRem(24));

    }

}

}